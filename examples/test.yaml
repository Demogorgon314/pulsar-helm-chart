#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

## deployed withh emptyDir
volumes:
  persistence: false

# disabled AntiAffinity
affinity:
  anti_affinity: false

# disable auto recovery
components:
  autorecovery: false
  pulsar_manager: true
  functions: false

zookeeper:
  replicaCount: 3
  resources:
    requests:
      memory: 1Gi
      cpu: 1.0
  configData:
    PULSAR_MEM: >
      -Xms128m -Xmx630m
  volumes:
    # use a persistent volume or emptyDir
    persistence: true
    data:
      name: data
      size: 5Gi
      local_storage: false
      ## If you already have an existent storage class and want to reuse it, you can specify its name with the option below
      ##
      storageClassName: gp2

bookkeeper:
  replicaCount: 3
  resources:
    requests:
      memory: 4Gi
      cpu: 1.0
  configData:
    # we use `bin/pulsar` for starting bookie daemons
    PULSAR_MEM: >
      -Xms1024m -Xmx2500m -XX:MaxDirectMemorySize=1024m
  volumes:
    # use a persistent volume or emptyDir
    persistence: true
    journal:
      name: journal
      size: 5Gi
      local_storage: false
      ## If you already have an existent storage class and want to reuse it, you can specify its name with the option below
      ##
      storageClassName: gp2
    ledgers:
      name: ledgers
      size: 5Gi
      local_storage: false
      ## If you already have an existent storage class and want to reuse it, you can specify its name with the option below
      ##
      storageClassName: gp2


broker:
  replicaCount: 100
  configData:
    ## Enable `autoSkipNonRecoverableData` since bookkeeper is running
    ## without persistence
    autoSkipNonRecoverableData: "true"
    # storage settings
    managedLedgerDefaultEnsembleSize: "2"
    managedLedgerDefaultWriteQuorum: "2"
    managedLedgerDefaultAckQuorum: "2"
    forceDeleteNamespaceAllowed: "true"


    # load balancer settings
    loadBalancerSheddingConditionHitCountThreshold: "0"
    loadBalancerNamespaceBundleSplitConditionHitCountThreshold: "0"
    loadBalancerReportUpdateMaxIntervalMinutes: "1"
    loadBalancerSheddingGracePeriodMinutes: "1"
    loadBalanceSheddingDelayInSeconds: "60"
    loadBalancerDebugModeEnabled: "false"
# new load balancer
    #loadManagerClassName: "org.apache.pulsar.broker.loadbalance.extensions.ExtensibleLoadManagerImpl"
    #loadBalancerLoadSheddingStrategy: "org.apache.pulsar.broker.loadbalance.extensions.scheduler.TransferShedder"
# old load balancer
    loadManagerClassName: "org.apache.pulsar.broker.loadbalance.impl.ModularLoadManagerImpl"
    loadBalancerOverrideBrokerNicSpeedGbps: "25"
    loadBalancerServiceUnitStateTombstoneDelayTimeInSeconds: "60"
    # split
    brokerDeleteInactiveTopicsEnabled: "false"
    allowAutoTopicCreation: "true"
    loadBalancerNamespaceBundleMaxSessions: "100"
    PULSAR_MEM: >
      -Xms2048m -Xmx2048m -XX:MaxDirectMemorySize=2048m
  resources:
    requests:
      memory: 4Gi
      cpu: 0.5


proxy:
  replicaCount: 1
  resources:
    requests:
      memory: 10Gi
      cpu: 4.0
  configData:
    PULSAR_MEM: >
      -Xms2000M -Xmx9000M -XX:MaxDirectMemorySize=1000M
  ports:
    http: 8080
    https: 443
    pulsar: 6650
    pulsarssl: 6651

toolset:
  replicaCount: 10
  resources:
    requests:
      memory: 1Gi
      cpu: 1.0
  configData:
    PULSAR_MEM: >
      -Xms512M -Xmx630M -XX:MaxDirectMemorySize=128M


# default image tag for pulsar images
# uses chart's appVersion when unspecified
defaultPulsarImageTag: hs-21

## Images
##
## Control what images to use for each component
images:
  zookeeper:
    repository: 598203581484.dkr.ecr.us-west-2.amazonaws.com/heesung-pulsar-amd
    # uses defaultPulsarImageTag when unspecified
    tag: hs-21
    pullPolicy: IfNotPresent
  bookie:
    repository: 598203581484.dkr.ecr.us-west-2.amazonaws.com/heesung-pulsar-amd
    # uses defaultPulsarImageTag when unspecified
    tag: hs-21
    pullPolicy: IfNotPresent
  autorecovery:
    repository: 598203581484.dkr.ecr.us-west-2.amazonaws.com/heesung-pulsar-amd
    # uses defaultPulsarImageTag when unspecified
    tag: hs-21
    pullPolicy: IfNotPresent
  broker:
    repository: 598203581484.dkr.ecr.us-west-2.amazonaws.com/heesung-pulsar-amd
    # uses defaultPulsarImageTag when unspecified
    tag: hs-21
    pullPolicy: IfNotPresent
  proxy:
    repository: 598203581484.dkr.ecr.us-west-2.amazonaws.com/heesung-pulsar-amd
    # uses defaultPulsarImageTag when unspecified
    tag: hs-21
    pullPolicy: IfNotPresent
  functions:
    repository: 598203581484.dkr.ecr.us-west-2.amazonaws.com/heesung-pulsar-amd
    # uses defaultPulsarImageTag when unspecified
    tag: hs-21
  pulsar_manager:
    repository: apachepulsar/pulsar-manager
    tag: v0.3.0
    pullPolicy: IfNotPresent
    hasCommand: false

prometheus-pulsar-kube-prometheus-sta-prometheus:
  prometheus:
    resources:
      limits:
        cpu: 2.0
        memory: 2Gi
      requests:
        cpu: 2.0
        memory: 2Gi

## Pulsar Zookeeper metadata. The metadata will be deployed as
## soon as the last zookeeper node is reachable. The deployment
## of other components that depends on zookeeper, such as the
## bookkeeper nodes, broker nodes, etc will only start to be
## deployed when the zookeeper cluster is ready and with the
## metadata deployed
pulsar_metadata:
  component: pulsar-init
  image:
    # the image used for running `pulsar-cluster-initialize` job
    repository: 598203581484.dkr.ecr.us-west-2.amazonaws.com/heesung-pulsar-amd
    # uses defaultPulsarImageTag when unspecified
    tag: hs-21
    pullPolicy: IfNotPresent
  ## set an existing configuration store
  # configurationStore:
  configurationStoreMetadataPrefix: ""
  configurationStorePort: 2181
    ## optional you can specify a nodeSelector for all init jobs (pulsar-init & bookkeeper-init)
    # nodeSelector:
  # cloud.google.com/gke-nodepool: default-pool

  ## optional, you can provide your own zookeeper metadata store for other components
  # to use this, you should explicit set components.zookeeper to false
  #
  # userProvidedZookeepers: "zk01.example.com:2181,zk02.example.com:2181"

  ## optional, you can specify where to run pulsar-cluster-initialize job
  # nodeSelector:%
